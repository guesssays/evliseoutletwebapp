// src/ui/loader.js
// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ª–æ–∞–¥–µ—Ä: —Å—Ç–µ–∫–ª—è–Ω–Ω—ã–π, —Å ¬´–æ—Ä–±–∏—Ç–æ–π¬ª –∏ —É–º–Ω—ã–º –ø–æ–∫–∞–∑–æ–º.
// ‚Äî –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –ø–æ–∫–∞–∑ (delay), –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (min)
// ‚Äî —Ä–µ—Ñ–∫–∞—É–Ω—Ç–µ—Ä (–º–Ω–æ–≥–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π)
// ‚Äî –º—è–≥–∫–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–æ—Ä–æ–±–∫–∏
// ‚Äî "snooze" —á—Ç–æ–±—ã –ø–æ–¥–∞–≤–∏—Ç—å –≤—Å–ø—ã—à–∫–∏ –Ω–∞ –±—ã—Å—Ç—Ä—ã—Ö —ç–∫—Ä–∞–Ω–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä Product)
// ‚Äî –ø—Ä–µ—Å–µ—Ç—ã: pageTransition(), blocking()
// ‚Äî –ø—Ä–æ–≥—Ä–µ—Å—Å (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): setProgress(0..1), resetProgress()
// ‚Äî ‚ö° flash-guard: –∑–∞—â–∏—Ç–∞ –æ—Ç ¬´–º–∏–≥–∞–Ω–∏—è¬ª –ø—Ä–∏ —Å—É–ø–µ—Ä–∫–æ—Ä–æ—Ç–∫–∏—Ö –∑–∞–¥–∞—á–∞—Ö
// ‚Äî micro(): –æ–±—ë—Ä—Ç–∫–∞ –¥–ª—è –º–∏–∫—Ä–æ–∑–∞–¥–∞—á –±–µ–∑ –ø–æ–∫–∞–∑–∞ —Å–ø–∏–Ω–Ω–µ—Ä–∞

export const Loader = (() => {
  let $root = null;
  let $text = null;
  let $ring = null;
  let $progress = null;

  let counter = 0;          // –∞–∫—Ç–∏–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
  let showTimer = null;     // —Ç–∞–π–º–µ—Ä –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –ø–æ–∫–∞–∑–∞
  let lastShowAt = 0;       // –∫–æ–≥–¥–∞ —Ä–µ–∞–ª—å–Ω–æ –ø–æ–∫–∞–∑–∞–ª–∏
  let lastHideAt = 0;       // –∫–æ–≥–¥–∞ —Ä–µ–∞–ª—å–Ω–æ —Å–∫—Ä—ã–ª–∏ (–¥–ª—è flash-guard)
  let snoozedUntil = 0;     // ¬´—Ç–∏—à–∏–Ω–∞¬ª –¥–æ —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ (–º—Å –æ—Ç epoch)

  // –ë–∞–∑–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —á–µ—Ä–µ–∑ configure)
  let CFG = {
    DELAY_MS:        380,   // –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –¥–æ–ª—å—à–µ 380–º—Å (—Ä–∞–Ω—å—à–µ –±—ã–ª–æ 260)
    MIN_MS:          520,   // –º–∏–Ω–∏–º—É–º –¥–µ—Ä–∂–∞—Ç—å 520–º—Å (—Ä–∞–Ω—å—à–µ –±—ã–ª–æ 600; –æ—â—É—â–∞–µ—Ç—Å—è –º—è–≥—á–µ)
    FLASH_GUARD_MS:  200,   // –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å, –µ—Å–ª–∏ —Å –º–æ–º–µ–Ω—Ç–∞ hide –ø—Ä–æ—à–ª–æ < 200–º—Å
    SNOOZE_DEFAULT:  900,   // –¥–µ—Ñ–æ–ª—Ç–Ω–∞—è ¬´—Ç–∏—à–∏–Ω–∞¬ª (—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã)
  };

  function configure(opts = {}) {
    if (typeof opts.DELAY_MS === 'number')       CFG.DELAY_MS       = Math.max(0, opts.DELAY_MS);
    if (typeof opts.MIN_MS   === 'number')       CFG.MIN_MS         = Math.max(0, opts.MIN_MS);
    if (typeof opts.FLASH_GUARD_MS === 'number') CFG.FLASH_GUARD_MS = Math.max(0, opts.FLASH_GUARD_MS);
    if (typeof opts.SNOOZE_DEFAULT === 'number') CFG.SNOOZE_DEFAULT = Math.max(0, opts.SNOOZE_DEFAULT);
  }

  function ensureDom() {
    if ($root) return;

    $root = document.createElement('div');
    $root.id = 'globalLoader';
    $root.setAttribute('aria-live', 'polite');
    $root.setAttribute('hidden', '');

    $root.innerHTML = `
      <div class="gl__backdrop"></div>
      <div class="gl__box" role="status" aria-label="–ó–∞–≥—Ä—É–∑–∫–∞">
        <div class="gl__spinner" aria-hidden="true">
          <div class="gl__ring"></div>
          <div class="gl__orbit">
            <span class="dot d1"></span>
            <span class="dot d2"></span>
            <span class="dot d3"></span>
          </div>
        </div>
        <div class="gl__bar" aria-hidden="true"><b style="width:0%"></b></div>
        <div class="gl__text" id="glText">–ó–∞–≥—Ä—É–∂–∞–µ–º‚Ä¶</div>
      </div>
    `;
    document.body.appendChild($root);
    $text = $root.querySelector('#glText');
    $ring = $root.querySelector('.gl__ring');
    $progress = $root.querySelector('.gl__bar > b');
  }

  function _visible() {
    return $root && !$root.hasAttribute('hidden') && $root.classList.contains('is-visible');
  }

  function _applyProgress(value) {
    if (!$progress) return;
    if (value == null || isNaN(value)) {
      $root?.classList.remove('has-progress');
      $progress.style.width = '0%';
      return;
    }
    const v = Math.max(0, Math.min(1, value));
    $root?.classList.add('has-progress');
    $progress.style.width = (v * 100).toFixed(1) + '%';
  }

  function setProgress(value) {
    ensureDom();
    _applyProgress(value);
  }

  function resetProgress() {
    setProgress(undefined);
  }

  function reallyShow(compact = false) {
    ensureDom();

    const now = Date.now();

    // 1) –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º, –ø–æ–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç ¬´—Ç–∏—à–∏–Ω–∞¬ª
    if (now < snoozedUntil) return;

    // 2) flash-guard: –µ—Å–ª–∏ —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–∫—Ä—ã–≤–∞–ª–∏ ‚Äî –Ω–µ –º–∏–≥–∞–µ–º
    if (now - lastHideAt < CFG.FLASH_GUARD_MS) return;

    if (compact) $root.classList.add('gl--compact');
    else $root.classList.remove('gl--compact');

    $root.removeAttribute('hidden');
    $root.classList.add('is-visible');
    lastShowAt = now;
  }

  function reallyHide() {
    if (!$root) return;
    $root.classList.remove('is-visible');
    $root.setAttribute('hidden', '');
    lastHideAt = Date.now();
    // –ø—Ä–∏ —Å–∫—Ä—ã—Ç–∏–∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –Ω–∞ –≤—Å—è–∫–∏–π
    resetProgress();
  }

  function show(message, opts = {}) {
    // opts: { force, delay, min, compact }
    ensureDom();
    const force   = !!opts.force;
    const delayMs = typeof opts.delay === 'number' ? Math.max(0, opts.delay) : CFG.DELAY_MS;
    const compact = !!opts.compact;

    if (message) setText(message);

    counter++;

    // –ï—Å–ª–∏ —É–∂–µ –≤–∏–¥–µ–Ω ‚Äî –Ω–µ —Ç—Ä–æ–≥–∞–µ–º —Ç–∞–π–º–µ—Ä—ã
    if (_visible()) return;

    clearTimeout(showTimer);

    if (force) {
      reallyShow(compact);
      return;
    }

    // –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –ø–æ–∫–∞–∑
    const plannedAt = Date.now() + delayMs;
    showTimer = setTimeout(() => {
      // –ü–æ–∫–∞ –∂–¥–∞–ª–∏ ‚Äî –≤—Å—ë –º–æ–≥–ª–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è
      if (counter <= 0) return;
      // –ï—Å–ª–∏ ¬´—Ç–∏—à–∏–Ω–∞¬ª –µ—â—ë –∞–∫—Ç–∏–≤–Ω–∞, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º (–∏ –Ω–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—ë–º —Ç–∞–π–º–µ—Ä ‚Äî –±—É–¥–µ—Ç —Ç–∏—Ö–æ)
      reallyShow(compact);
    }, delayMs);
  }

  function hide(opts = {}) {
    // opts: { min }
    const minMs = typeof opts.min === 'number' ? Math.max(0, opts.min) : CFG.MIN_MS;

    if (counter > 0) counter--;
    if (counter > 0) return; // –µ—â—ë –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏

    clearTimeout(showTimer);

    const elapsed = Date.now() - lastShowAt;
    if (_visible() && elapsed < minMs) {
      setTimeout(reallyHide, Math.max(0, minMs - elapsed));
    } else {
      reallyHide();
    }
  }

  async function wrap(promiseOrFn, message, opts = {}) {
    show(message, opts);
    try {
      const p = (typeof promiseOrFn === 'function') ? promiseOrFn() : promiseOrFn;
      return await p;
    } finally {
      hide(opts);
    }
  }

  function setText(message = '') {
    ensureDom();
    try { $text.textContent = String(message || '–ó–∞–≥—Ä—É–∂–∞–µ–º‚Ä¶'); } catch {}
  }

  // –í—Ä–µ–º–µ–Ω–Ω–∞—è ¬´—Ç–∏—à–∏–Ω–∞¬ª: –ø–æ–¥–∞–≤–ª—è–µ–º –ø–æ–∫–∞–∑ –ª–æ–∞–¥–µ—Ä–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –≤—Å–ø—ã—à–∫–∏
  function snooze(ms = CFG.SNOOZE_DEFAULT) {
    snoozedUntil = Date.now() + Math.max(0, ms);
  }

  // –ü—É–±–ª–∏—á–Ω—ã–π –∞–ª–∏–∞—Å –µ—Å–ª–∏ —Ö–æ—á–µ—Ç—Å—è —è–≤–Ω–æ –ø–æ–¥–∞–≤–∏—Ç—å –±–ª–∏–∂–∞–π—à–∏–µ –º–∏–∫—Ä–æ–∑–∞–¥–∞—á–∏
  function suppressFlash(ms = CFG.SNOOZE_DEFAULT) { snooze(ms); }

  // ¬´–±–µ—Ä–µ–∂–Ω—ã–π¬ª –ø–µ—Ä–µ—Ö–æ–¥ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ ‚Äî –æ–±—ã—á–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ snooze –±–µ–∑ —Å–ø–∏–Ω–Ω–µ—Ä–∞
  function pageTransition(message = '–ü–µ—Ä–µ—Ö–æ–¥‚Ä¶', opts = {}) {
    const compact = opts.compact ?? true;
    const delay   = opts.delay ?? CFG.DELAY_MS;
    const min     = opts.min ?? CFG.MIN_MS;

    return {
      // –º—è–≥–∫–∏–π –≤–∞—Ä–∏–∞–Ω—Ç: –ø—Ä–∏ start() ‚Äî —Ç–æ–ª—å–∫–æ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –ø–æ–∫–∞–∑, –ø–ª—é—Å snooze
      start() {
        snooze(CFG.SNOOZE_DEFAULT);
        show(message, { delay, compact });
      },
      done() { hide({ min }); },
      async run(fn) {
        snooze(CFG.SNOOZE_DEFAULT);
        return wrap(fn, message, { delay, min, compact });
      },
    };
  }

  // ¬´–∂—ë—Å—Ç–∫–∏–π¬ª —Ä–µ–∂–∏–º ‚Äî –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞/–¥–æ–ª–≥–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
  function blocking(message = '–û—Ñ–æ—Ä–º–ª—è–µ–º –∑–∞–∫–∞–∑‚Ä¶', opts = {}) {
    const compact = opts.compact ?? false;
    const min     = opts.min ?? Math.max(CFG.MIN_MS, 900);
    return {
      start() { show(message, { force: true, delay: 0, compact }); },
      done()  { hide({ min }); },
      async run(fn) { return wrap(fn, message, { force: true, delay: 0, min, compact }); },
      setProgress, resetProgress,
    };
  }

  // ü´ß –ú–∏–∫—Ä–æ-–æ–±—ë—Ä—Ç–∫–∞: –Ω–∞ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å—Ç–∞–≤–∏—Ç snooze –∏ –ù–ï –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏–Ω–Ω–µ—Ä
  async function micro(fn, snoozeMs = 600) {
    snooze(snoozeMs);
    const res = await (typeof fn === 'function' ? fn() : fn);
    // –Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –≥–≤–∞—Ä–¥ –æ—Ç ¬´—ç—Ö–æ-–≤—Å–ø—ã—à–∫–∏¬ª
    snooze(120);
    return res;
  }

  return {
    show, hide, wrap, setText,
    setProgress, resetProgress,
    pageTransition, blocking,
    snooze, suppressFlash, micro, configure,
  };
})();
